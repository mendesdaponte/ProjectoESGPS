<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        yAAAAMgBFP3XOwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAAXdEVYdFRpdGxl
        AGR5bmFtaWMgYmx1ZSBsZWZ0ByQQggAAABh0RVh0QXV0aG9yAEZyYW56aXNrYSBTcG9uc2VsaBsnPwAA
        AHB0RVh0RGVzY3JpcHRpb24AdXNlcyAgPGh0dHA6Ly9mdHAudW5pLWVybGFuZ2VuLmRlL3B1Yi9ycnpl
        L3RhbmdvL3JyemUtaWNvbi1zZXQvdGFuZ28vc2NhbGFibGUvYWN0aW9ucy9uZXh0LWJsdWUucG5nPh64
        59EAAABSdEVYdENvcHlyaWdodABDQyBBdHRyaWJ1dGlvbi1TaGFyZUFsaWtlIGh0dHA6Ly9jcmVhdGl2
        ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LXNhLzMuMC9eg1q8AAAIyklEQVRoQ9WYe1DU1xXHyaNNmjRJ
        826MuruAmpnEttrE+pjYPCy4LwwoqaJRsGCioPhCFARWgd3fLrDAAgLyUEN4Kw/l6RMBnzzEmmkzdpxp
        08k4NU3/SRNYEE7P+ckv/rocXrpxdGc+M/Dde3/3e+4999y7PxcAeKBhRWfirjY8zenOghWdhUJtmqHU
        mE5w3zkLVnQGrhqjzk1n6VFphX9w3zsLVrxblBrjhjcWJ/VtTq4Hlc78JdfGWbDineJiMDys0poyZn2U
        1ptQeB4Si84/OAG87JHwpEojNC74JMduO9gOu/afBWvxhQcjgEle5glKrfAXn7BCe3JZO6w2N8KyXbWQ
        XHLx/g9ApRN+7aoz3wiMrexLKmkDXXglvBdaBst310FK6X0egGKhUTPFy9K9KaVhwFhwAd7bWAZvBn0G
        CzaVw0dx9ZBadh8HgDU+ZPoSa190zmmIyj0D89YVi+YJzy0HYZURA8AVwNT6arLW9Cz3DGfAiiNBlUah
        FWyzVqT3CgVnYVPaKZj1ceEP5md/UgSabRXgb2rAFWiDmUttA+5eFlBqhJtKnfBvDKgKD7dlrguEZ7jn
        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
</value>
  </data>
</root>